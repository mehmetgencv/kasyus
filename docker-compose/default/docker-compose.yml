version: '3.8'

name: kasyus-dev

services:

  message:
    build:
      context: ../../message
      dockerfile: Dockerfile
    container_name: message
    ports:
      - "9010:9010"
    environment:
      - OTEL_SERVICE_NAME=message

    healthcheck:
      test: "curl --fail --silent localhost:9010/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - kasyus-network
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  discovery-service:
    build:
      context: ../../discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - DISCOVERY_SERVICE_HOSTNAME=discovery-service

    healthcheck:
      test: "curl --fail --silent localhost:8761/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - kasyus-network

  api-gateway:
    build:
      context: ../../api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8072:8072"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - DISCOVERY_SERVICE_HOSTNAME=discovery-service
      - DISCOVERY_SERVICE_PORT=8761
    networks:
      - kasyus-network
    healthcheck:
      test: "curl --fail --silent localhost:8072/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
#    depends_on:
#      discovery-service:
#        condition: service_healthy
    restart: always

  product-service:
    build:
      context: ../../product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SERVER_PORT=8081
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kasyus_products
      - SPRING_DATASOURCE_USERNAME=kasyus
      - SPRING_DATASOURCE_PASSWORD=kasyus123
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_REDIS_HOST=redis
    networks:
      - kasyus-network
    healthcheck:
      test: "curl --fail --silent product-service:8081/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
    restart: always


  order-service:
    build:
      context: ../../order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SERVER_PORT=8082
      - DISCOVERY_SERVICE_HOSTNAME=discovery-service
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/kasyus_orders
      - SPRING_DATASOURCE_USERNAME=kasyus
      - SPRING_DATASOURCE_PASSWORD=kasyus123
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:29092
      - SPRING_REDIS_HOST=redis
    networks:
      - kasyus-network
    healthcheck:
      test: "curl --fail --silent localhost:8082/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      postgres:
        condition: service_healthy
    restart: always


  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: kasyus
      POSTGRES_PASSWORD: kasyus123
      POSTGRES_MULTIPLE_DATABASES: kasyus_products,kasyus_orders
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kasyus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kasyus"]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kasyus-network


#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=false
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ports:
#      - "9200:9200"
#    volumes:
#      - elasticsearch_data:/usr/share/elasticsearch/data
#    networks:
#      - kasyus-network
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.7.1
#    container_name: kibana
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - kasyus-network


networks:
  kasyus-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
#  elasticsearch_data:
