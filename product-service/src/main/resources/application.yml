spring:
  application:
    name: "product-service"

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/kasyus_products}
    username: ${SPRING_DATASOURCE_USERNAME:kasyus}
    password: ${SPRING_DATASOURCE_PASSWORD:kasyus123}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

  cloud:
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint:
    gateway:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true


  metrics:
    tags:
      application: ${spring.application.name}


info:
  app:
    name: "product-service"
    description: "Kasyus Product Service Application"
    version: "1.0.0"

logging:
  level:
    com:
      kasyus:
        product_service: DEBUG

  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://${DISCOVERY_SERVICE_HOSTNAME:localhost}:${DISCOVERY_SERVICE_PORT:8761}/eureka/
server:
  port: 8081

minio:
  url: http://localhost:9000
  root-user: loki
  root-password: supersecret
  bucket-name: kasyus-products
